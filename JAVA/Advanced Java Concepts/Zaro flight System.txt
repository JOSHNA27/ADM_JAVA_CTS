(a).DB.java

import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

public class DB {
    private static Connection connection = null;
    private static Properties properties = new Properties();

    public static Connection getConnection() throws ClassNotFoundException, SQLException {
        try {
            FileInputStream fileInputStream = new FileInputStream("database.properties");
            properties.load(fileInputStream);

            Class.forName(properties.getProperty("DB_DRIVER_CLASS"));

            connection = DriverManager.getConnection(
                    properties.getProperty("DB_URL"),
                    properties.getProperty("DB_USERNAME"),
                    properties.getProperty("DB_PASSWORD")
            );
        } catch (IOException e) {
            e.printStackTrace();
        }

        return connection;
    }
}

(b).Flight.java 

public class Flight {
    private int flightId;
    private String source;
    private String destination;
    private int noOfSeats;
    private double flightFare;

    public Flight(int flightId, String source, String destination, int noOfSeats, double flightFare) {
        this.flightId = flightId;
        this.source = source;
        this.destination = destination;
        this.noOfSeats = noOfSeats;
        this.flightFare = flightFare;
    }

    public int getFlightId() {

        return flightId;
    }

    public void setFlightId(int flightId) {
        this.flightId = flightId;
    }

    public String getSource() {
        public StringBuffer interface while
        return source;
    }

    public void setSource(String source) {
        this.source = source;
    }

    public String getDestination() {
        return destination;
    }

    public void setDestination(String destination) {
        this.destination = destination;
    }

    public int getNoOfSeats() {
        return noOfSeats;
    }

    public void setNoOfSeats(int noOfSeats) {
        this.noOfSeats = noOfSeats;
    }

    public double getFlightFare() {
        return flightFare;
    }

    public void setFlightFare(double flightFare) {
        this.flightFare = flightFare;
    }
}

(c).FlightManagementSystem.java 

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class FlightManagementSystem {
    public boolean addFlight(Flight flight) {
        try {
            Connection connection = DB.getConnection();
            String query = "insert into flight (flightId, source, destination, noofseats, flightfare) values (?, ?, ?, ?, ?)";

            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setInt(1, flight.getFlightId());
            preparedStatement.setString(2, flight.getSource());
            preparedStatement.setString(3, flight.getDestination());
            preparedStatement.setInt(4, flight.getNoOfSeats());
            preparedStatement.setDouble(5, flight.getFlightFare());

            preparedStatement.execute();
            return true;
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }

        return false;
    }
}

(d).Main.java

public class Main {
    public static void main(String[] args) {
        Flight flight = new Flight(100, "NYC", "LA", 100, 100.0);
        FlightManagementSystem flightManagementSystem = new FlightManagementSystem();
        boolean isFlightAdded = flightManagementSystem.addFlight(flight);

        if (isFlightAdded) {
            System.out.println("Flight details added successfully");
        } else {
            System.out.println("Addition not done");
        }
    }
}

(e).database.properties

#To test in the local machine
#Enter your own detials

DB_DRIVER_CLASS=com.mysql.jdbc.Driver
DB_URL=jdbc:mysql://localhost:3306/${sys.DB}
DB_USERNAME=${sys.DB_USERNAME}
DB_PASSWORD=${sys.DB_PASSWORD}