(a).Account.java 

public abstract class Account {
    protected int accountNumber;
    protected Customer customerObj;
    protected double balance;

    public Account(int accountNumber, Customer customerObj, double balance) {
        this.accountNumber = accountNumber;
        this.customerObj = customerObj;
        this.balance = balance;
    }

    public int getAccountNumber() {
        return accountNumber;
    }

    public void setAccountNumber(int accountNumber) {
        this.accountNumber = accountNumber;
    }

    public Customer getCustomerObj() {
        return customerObj;
    }

    public void setCustomerObj(Customer customerObj) {
        this.customerObj = customerObj;
    }

    public double getBalance() {
        return balance;
    }

    public void setBalance(double balance) {
        this.balance = balance;
    }

    public abstract boolean withdraw(double amount);
}

(b).Customer.java

public class Customer {
    private int customerId;
    private String customerName;
    private String emailId;

    public Customer(int customerId, String customerName, String emailId) {
        this.customerId = customerId;
        this.customerName = customerName;
        this.emailId = emailId;
    }

    public int getCustomerId() {
        return customerId;
    }

    public void setCustomerId(int customerId) {
        this.customerId = customerId;
    }

    public String getCustomerName() {
        return customerName;
    }

    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }

    public String getEmailId() {
        return emailId;
    }

    public void setEmailId(String emailId) {
        this.emailId = emailId;
    }
}

(c).Main.java 

public class Main {
    public static void main(String[] args) {
        Customer customer = new Customer(101, "Ritam", "ritam@email.com");
        SavingsAccount savingsAccount = new SavingsAccount(1001, customer, 10000, 500);

        if (savingsAccount.withdraw(9000)) {
            System.out.println(savingsAccount.getBalance());
        }
    }
}

(d).SavingsAccount.java

public class SavingsAccount extends Account {
    private double minimumBalance;

    public SavingsAccount(int accountNumber, Customer customerObj, double balance, double minimumBalance) {
        super(accountNumber, customerObj, balance);
        this.minimumBalance = minimumBalance;
    }

    public double getMinimumBalance() {
        return minimumBalance;
    }

    public void setMinimumBalance(double minimumBalance) {
        this.minimumBalance = minimumBalance;
    }

    @Override
    public boolean withdraw(double amount) {
        if (balance - amount > minimumBalance) {
            balance -= amount;

            return true;
        }

        return false;
    }
}
